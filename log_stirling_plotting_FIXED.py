import numpy as npimport matplotlib.pyplot as plt# Parameterslambda_val = 100 / 60  # arrival rate (customers per minute)mu_val = 1 / 15        # service rate (customers per minute per server)target_wait_time = 10  # in minutes# Safe log-domain Stirling approximationdef log_stirling(n):    if n == 0:        return 0.0    return 0.5 * np.log(2 * np.pi * n) + n * np.log(n) - n# Compute Wq using log-domain Stirlingdef compute_Wq_stirling_log(s, lam, mu):    if s == 0 or lam / (s * mu) >= 1:        return float('inf')    a = lam / mu    rho = lam / (s * mu)    log_terms = np.array([n * np.log(a) - log_stirling(n) for n in range(s)])    sum_terms = np.sum(np.exp(log_terms))    log_last_term = s * np.log(a) - log_stirling(s) + np.log(1 / (1 - rho))    last_term = np.exp(log_last_term)    P0 = 1 / (sum_terms + last_term)    log_pw_numerator = s * np.log(a) - log_stirling(s)    Pw = np.exp(log_pw_numerator) * P0 / (1 - rho)    Lq = Pw * rho / (1 - rho)    Wq = Lq / lam    return Wq  # in minutes# Traffic intensity vs serverss_values = np.arange(10, 60)rho_values = lambda_val / (s_values * mu_val)plt.figure()plt.plot(s_values, rho_values, label=r'$\rho(s) = \lambda / (s \mu)$')plt.xlabel('Number of Servers $s$')plt.ylabel(r'Traffic Intensity $\rho$')plt.title('Traffic Intensity as a Function of Server Count')plt.grid(True)plt.legend()plt.savefig("traffic_intensity_plot_safe2_fixed.png")# Compute s*(rho)rho_test = np.linspace(0.1, 0.99, 100)n_star = []for rho in rho_test:    s_candidate = int(np.ceil(lambda_val / (rho * mu_val)))    while True:        if compute_Wq_stirling_log(s_candidate, lambda_val, mu_val) <= target_wait_time:            n_star.append(s_candidate)            break        s_candidate += 1plt.figure()plt.plot(rho_test, n_star, label=r'$s^*(\rho)$', color='orange')plt.xlabel(r'Traffic Intensity $\rho$')plt.ylabel(r'Minimum Required Servers $s^*(\rho)$')plt.title('Minimum Staffing Level vs. Traffic Intensity')plt.grid(True)plt.legend()plt.savefig("n_star_vs_rho_plot_safe2_fixed.png")